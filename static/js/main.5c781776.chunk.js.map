{"version":3,"sources":["App/img/money.jpg","App/Header/styled.js","App/Header/index.js","App/Footer/styled.js","App/Footer/index.js","App/Container/styled.js","App/Container/index.js","App/SectionHeader/styled.js","App/SectionHeader/index.js","App/Emoji/index.js","App/Section/index.js","App/Form/Legend/styled.js","App/Form/Legend/index.js","App/Form/Label/styled.js","App/Form/Label/index.js","App/Form/Button/styled.js","App/Form/Button/index.js","App/currencies.js","App/Form/Select/styled.js","App/Form/Select/index.js","App/Form/Message/styled.js","App/Form/Message/index.js","App/Form/Clock/styled.js","App/Form/Clock/index.js","App/Form/Clock/useCurrentDate.js","App/Form/styled.js","App/Form/index.js","App/theme.js","App/App.js","serviceWorker.js","index.js"],"names":["module","exports","HeaderInfo","styled","header","theme","primaryColor","Header","title","FooterInfo","footer","Footer","Div","div","Container","children","h2","SectionHeader","emoji","Emoji","symbol","label","role","aria-label","aria-hidden","Section","form","LegendInfo","legend","Legend","LabelTitle","span","InputBox","Input","input","Label","name","min","step","required","readonly","placeholder","value","onChange","select","type","readOnly","ButtonElement","button","Button","currencies","shortName","rate","SelectCurrency","Select","map","currency","key","MessageInfo","Message","message","ClockTitle","p","ClockDisplay","Clock","useState","Date","date","setDate","useEffect","intervalId","setInterval","clearInterval","formatDate","toLocaleString","undefined","weekday","day","month","year","hour","minute","second","useCurrentDate","Fieldset","fieldset","img","Form","sourceAmount","setSourceAmount","sourceCurrency","setSourceCurrency","targetCurrency","setTargetCurrency","sourceCurrencyRate","find","targetCurrencyRate","setMessage","onInputChange","target","targetAmount","toFixed","createMessage","parse","onSubmit","event","preventDefault","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.5c781776.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/money.b4d4e828.jpg\";","import styled from \"styled-components\";\n\nexport const HeaderInfo = styled.header`\n    margin: 20px auto;\n    text-align: center;\n    font-size: 20px;\n    color: ${({theme}) => theme.primaryColor};\n    line-height: 1.3;\n`;","import React from \"react\";\nimport { HeaderInfo } from \"./styled\";\n\nconst Header = ({ title }) => (\n    <HeaderInfo>\n        <h1>{title}</h1>\n    </HeaderInfo>\n);\n\nexport default Header;","import styled from \"styled-components\";\n\nexport const FooterInfo = styled.footer`\n    color: rgba(158, 158, 158, 0.767);\n    font-size: 14px;\n    text-align: center;\n    margin: 10px;\n`;","import React from \"react\";\nimport { FooterInfo } from \"./styled\";\n\nconst Footer = ({ title }) => (\n    <FooterInfo>\n        {title}\n    </FooterInfo>\n);\n\nexport default Footer;","import styled from \"styled-components\";\n\nexport const Div = styled.div`\n    max-width: 1000px;\n    margin: auto;\n    padding-left: 20px;\n    padding-right: 20px;\n`;","import React from \"react\";\nimport { Div } from \"./styled\";\n\nconst Container = ({ children }) => (\n    <Div>\n        {children}\n    </Div>\n);\n\nexport default Container;","import styled from \"styled-components\";\n\nexport const Header = styled.h2`\n    text-align: center;\n    padding-bottom: 20px;\n    margin: 0 auto 20px;\n    font-size: 19px;\n`;","import React from \"react\";\nimport { Header } from \"./styled\";\n\nconst SectionHeader = ({ emoji, title }) => (\n    <Header>\n        {emoji}{title}\n    </Header>\n);\n\nexport default SectionHeader;","import React from 'react';\n\nconst Emoji = ({symbol, label}) => (\n    <span\n        role=\"img\"\n        aria-label={label ? label : \"\"}\n        aria-hidden={label ? \"false\" : \"true\"}\n    >\n        {symbol}\n    </span>\n);\n\nexport default Emoji;","import React from \"react\";\n\nconst Section = ({ header, form }) => (\n    <section>\n        {header}\n        {form}\n    </section>\n);\n\nexport default Section;","import styled from \"styled-components\";\n\nexport const LegendInfo = styled.legend`\n    padding: 5px 10px;\n    background-color: ${({ theme }) => theme.primaryColor};\n    color: white;\n    border-radius: 10px 10px;\n    text-align: center;\n    box-shadow: 5px 5px 10px -6px #5B5B5B;\n`;","import React from \"react\";\nimport { LegendInfo } from \"./styled\";\n\nconst Legend = ({ title }) => (\n    <LegendInfo>\n        {title}\n    </LegendInfo>\n);\n\nexport default Legend;","import styled from \"styled-components\";\n\nexport const LabelTitle = styled.span`\n    width: 100%;\n    max-width: 140px;\n    display: inline-block;\n    margin-right: 5px;\n    font-weight: 700;\n`;\n\nexport const InputBox = styled.span`\n    display: inline-block;\n`;\n\nexport const Input = styled.input`\n    width: 130px;\n    padding: 7px 10px;\n    border-radius: 5px;\n    border: 1px solid #ccc;\n`;","import React from \"react\";\nimport { LabelTitle, InputBox, Input } from \"./styled\";\n\nconst Label = ({ title, name, min, step, required, readonly, placeholder, value, onChange, select }) => (\n    <p>\n        <label>\n            <LabelTitle>\n                {title}\n            </LabelTitle>\n\n            <InputBox>\n                <Input\n                    value={value}\n                    onChange={onChange}\n                    type=\"number\"\n                    name={name}\n                    min={min}\n                    step={step}\n                    required={required}\n                    placeholder={placeholder}\n                    readOnly={readonly}\n                />\n                {select}\n            </InputBox>\n        </label>\n    </p>\n);\n\nexport default Label;","import styled from \"styled-components\";\n\nexport const ButtonElement = styled.button`\n    padding: 10px 20px;\n    background-color: ${({ theme }) => theme.primaryColor};\n    color: white;\n    border-radius: 10px;\n    text-align: center;\n    box-shadow: 5px 5px 10px -6px #5B5B5B;\n    border: none;\n    margin-bottom: 5px;\n\n\n    &:hover {\n        background-color: rgb(172, 15, 46);\n        transform: scale(1.1);\n        transition: 0.5s;\n    }\n\n    &:active {\n        background-color: rgb(230, 187, 0)\n    }\n`;","import React from \"react\";\nimport { ButtonElement } from \"./styled\";\n\nconst Button = ({ title }) => (\n    <ButtonElement>\n        {title}\n    </ButtonElement>\n);\n\nexport default Button;","export const currencies = [\n    {\n        shortName: \"PLN\",\n        rate: 1,\n    },\n    {\n        shortName: \"USD\",\n        rate: 3.70,\n    },\n    {\n        shortName: \"EUR\",\n        rate: 4.40,\n    },\n    {\n        shortName: \"CHF\",\n        rate: 4.11,\n    },\n];","import styled from \"styled-components\";\n\nexport const SelectCurrency = styled.select`\n    border: 1px solid #ccc;\n    width: 70px;\n    height: 34px;\n    background-color: white;\n    margin-left: 10px;\n`;","import React from \"react\";\nimport { currencies } from \"../../currencies\";\nimport { SelectCurrency } from \"./styled\";\n\nconst Select = ({ value, onChange }) => (\n\n    <SelectCurrency\n        value={value}\n        onChange={onChange}\n    >\n\n        {currencies.map((currency => (\n\n            <option\n                key={currency.shortName}\n                value={currency.shortName}\n            >\n                {currency.shortName}\n            </option>\n\n        )))};\n\n    </SelectCurrency>\n);\n\nexport default Select;","import styled from \"styled-components\";\n\nexport const MessageInfo = styled.span`\n    color: ${({theme}) => theme.primaryColor};\n    margin-left: 15px;\n    padding: 10px;\n    font-size: 18px;\n`;","import React from \"react\";\nimport { MessageInfo } from \"./styled\";\n\nconst Message = ({ message }) => (\n    <MessageInfo>\n        {message}\n    </MessageInfo>\n);\n\nexport default Message;","import styled from \"styled-components\";\n\nexport const ClockTitle = styled.p`\n    font-family: 'Space Mono', monospace;\n    text-align: right;\n    font-size: 14px;\n    margin-bottom: -15px;\n    margin-right: 10px;\n    font-weight: bold;\n    color: #777;\n`;\n\nexport const ClockDisplay = styled.p`\n    font-family: 'Space Mono', monospace;\n    text-align: right;\n    font-size: 14px;\n    margin-right: 10px;\n    color: #777;\n`;","import React from \"react\";\nimport { ClockTitle, ClockDisplay } from \"./styled\";\nimport { useCurrentDate } from \"./useCurrentDate\";\n\nconst Clock = () => {\n\n    const { date, formatDate } = useCurrentDate();\n\n    return (\n        <>\n            <ClockTitle>\n                Dzisiaj jest:\n            </ClockTitle>\n\n            <ClockDisplay>\n                {formatDate(date)}\n            </ClockDisplay>\n        </>\n    )\n};\n\nexport default Clock;","import { useState, useEffect } from \"react\";\n\nexport const useCurrentDate = () => {\n\n    const formatDate = (date) => date.toLocaleString(undefined, {\n        weekday: \"long\",\n        day: \"numeric\",\n        month: \"long\",\n        year: \"numeric\",\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n        second: \"2-digit\"\n    });\n\n    const [date, setDate] = useState(new Date());\n\n    useEffect(() => {\n\n        const intervalId = setInterval(() => {\n            setDate(new Date())\n        }, 1000);\n\n        return () => {\n            clearInterval(intervalId);\n        };\n\n    }, []);\n\n    return {\n        date,\n        formatDate,\n    }\n};","import styled from \"styled-components\";\nimport img from \"../img/money.jpg\";\n\nexport const Fieldset = styled.fieldset`\n    max-width: 800px;\n    margin: 0 auto;\n    margin-bottom: 10px;\n    border: 2px solid ${({ theme }) => theme.primaryColor};\n    border-radius: 10px;\n    padding-left: 40px;\n    padding-top: 15px;\n    background-image: url(${img});\n    background-size: cover;\n    background-blend-mode: soft-light;\n    background-color: rgba(235, 235, 235, 0.700);\n    box-shadow: 5px 5px 10px -6px #5B5B5B;\n`;","import React, { useState } from \"react\";\nimport Legend from \"./Legend\";\nimport Label from \"./Label\";\nimport Button from \"./Button\";\nimport { currencies } from \"../currencies\";\nimport Select from \"./Select\";\nimport Message from \"./Message\";\nimport parse from 'html-react-parser';\nimport Clock from \"./Clock\";\nimport { Fieldset } from \"./styled\";\n\nconst Form = () => {\n\n    const [sourceAmount, setSourceAmount] = useState(\"\");\n    const [sourceCurrency, setSourceCurrency] = useState(currencies[0].shortName);\n    const [targetCurrency, setTargetCurrency] = useState(currencies[1].shortName);\n\n    const sourceCurrencyRate = currencies.find(({ shortName }) => shortName === sourceCurrency).rate;\n    const targetCurrencyRate = currencies.find(({ shortName }) => shortName === targetCurrency).rate;\n\n    const [message, setMessage] = useState(\"\")\n\n    const onInputChange = ({ target }) => {\n        setSourceAmount(target.value);\n    };\n\n    const onSourceCurrencyChange = ({ target }) => {\n        setSourceCurrency(target.value)\n    };\n\n    const onTargetCurrencyChange = ({ target }) => {\n        setTargetCurrency(target.value)\n    };\n\n    const targetAmount = sourceAmount === \"\"\n        ? \"\"\n        : (sourceAmount * sourceCurrencyRate / targetCurrencyRate).toFixed(2);\n\n\n    const createMessage = () => {\n        const rate = (sourceAmount / targetAmount).toFixed(2);\n\n        let result = parse(`Gratulacje! Wymieniłeś <strong>${sourceAmount}&nbsp;${sourceCurrency}</strong> \n        na <strong>${targetAmount}&nbsp;${targetCurrency}</strong> \n        po kursie <strong>${rate}</strong>!`)\n\n        return result;\n    };\n\n    const onFormSubmit = (event) => {\n        event.preventDefault();\n        setMessage(createMessage);\n    };\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <Fieldset>\n\n                <Legend title=\"Wymiana waluty\" />\n\n                <Clock />\n                <Label\n                    value={sourceAmount}\n                    onChange={onInputChange}\n                    title=\"Chcę wymienić:\"\n                    name=\"amountToExchange\"\n                    min=\"1.0\"\n                    step=\"0.01\"\n                    required={true}\n                    placeholder=\"Wpisz kwotę\"\n                    select={\n                        <Select\n                            value={sourceCurrency}\n                            onChange={onSourceCurrencyChange}\n                        />\n                    }\n                />\n\n                <Label\n                    value={targetAmount}\n                    onChange={onInputChange}\n                    title=\"Otrzymam:\"\n                    name=\"exchangedAmount\"\n                    readonly={true}\n                    select={\n                        <Select\n                            value={targetCurrency}\n                            onChange={onTargetCurrencyChange}\n                        />\n                    }\n                />\n\n                <p>\n                    <Button title=\"Kupuję!\" />\n\n                    <Message\n                        message={message}\n                    />\n                </p>\n\n            </Fieldset>\n        </form>\n    )\n};\n\nexport default Form;","export const theme = {\n    primaryColor: \"rgb(31, 119, 31)\",\n};","import React from 'react';\nimport Header from \"./Header\"\nimport Footer from './Footer';\nimport Container from './Container';\nimport SectionHeader from './SectionHeader';\nimport Emoji from './Emoji';\nimport Section from \"./Section\";\nimport Form from \"./Form\"\nimport { ThemeProvider } from \"styled-components\";\nimport { theme } from './theme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Container>\n\n        <Header title=\"Kalkulator walut\" />\n\n        <Section\n          header={\n            <SectionHeader\n              emoji={<Emoji symbol=\"🔒\" label=\"lock\" />}\n              title=\"Bezpieczna wymiana przez internet!\"\n            />\n          }\n          form={<Form />}\n        />\n\n        <Footer title=\"© Copyright by Michał Adamczyk 2020. Wszelkie prawa zastrzeżone!\" />\n\n      </Container >\n    </ThemeProvider>\n  )\n};\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}